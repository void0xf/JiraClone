services:
  projectdb:
    container_name: projectdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ProjectDb
    restart: always
    ports:
     - "15432:5432"
    volumes:
     - postgres_projectdb:/var/lib/postgresql/data
  issuedb:
    container_name: issuedb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=IssueDb
    restart: always
    ports:
     - "15433:5432"
    volumes:
     - postgres_issuedb:/var/lib/postgresql/data   
  userdb:
    container_name: userdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=userdb
    restart: always
    ports:
      - "15434:5432"
    volumes:
      - postgres_userdb:/var/lib/postgresql/data
  
  postgres-db:
    container_name: postgres-db-keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: YourStrongDbPassword
    networks:
      - my_network
    restart: unless-stopped
  
  
  keycloak:
    container_name: keycloak
    command: [ 'start-dev', '--import-realm' ]
    environment:
      KEYCLOAK_ADMIN: admin 
      KEYCLOAK_ADMIN_PASSWORD: YourStrongAdminPassword
      
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-db # Service name of the Keycloak DB container
      KC_DB_URL_DATABASE: keycloak_db # DB Name
      KC_DB_USERNAME: keycloak_user # DB User
      KC_DB_PASSWORD: YourStrongDbPassword # DB Password <-- Use the SAME password as in postgres-db
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    volumes:
      - ./keycloak-config/jira-clone-realm.json:/opt/keycloak/data/import/jira-clone-realm.json:ro

    networks:
      - my_network
    restart: unless-stopped


  # Define the network
  